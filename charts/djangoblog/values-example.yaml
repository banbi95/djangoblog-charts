global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""
  commonAnnotations: {}

fullnameOverride: "djangoblog"
nameOverride: "djangoblog"


djangoblog:
  namespaceOverride: "blog"
  image:
    repository: "swr.cn-north-4.myhuaweicloud.com/devin/djangoblog"  
    tag: "250120"
    pullPolicy: IfNotPresent
    imagePullSecrets: "django-blog-secret"
  replicas: 1

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 1Gi
    storageClass: "standard"
    claimName: "djangoblog-pvc"
    annotations: {}
    labels: {}
  config:
    secretName: "djangoblog-config-secret"  

  service:
    type: ClusterIP
    port: 80
    targetPort: 8000
    nodePort: ""
    annotations: {"example-key","example-value"}
    labels: {"label-name","label-value"}
    
  
  hpa:
    enabled: false
    minReplicas: 1
    maxReplicas: 10
    targetCPUUtilizationPercentage: 50
    # targetMemoryUtilizationPercentage: 80
  

nginx:
  enabled: true
  image:
    repository: "nginx"
    tag: "latest"
    pullPolicy: IfNotPresent
  annnotations: {}
  replicas: 1

  service:
    type: NodePort
    port: 80
    targetPort: 80
    nodePort: "30888"
    annotations: {}
    labels: {}

  config: {}
  


mysql:
  enabled: true
  global:
    storageClass: standard
  namespaceOverride: db
  architecture: standalone
  auth:
    rootPassword: "password"
    createDatabase: true
    database: "djangoblog"
    # username: ""
    # password: ""
  



externalDB:
  enabled: false
  host: "examplehost.com"


redis:
  enabled: true
  global:
    storageClass: "standard"
    redis:
      password: "password"
  namespaceOverride: "default"
  architecture: replication
  replica: 
    replicaCount: 3











    


