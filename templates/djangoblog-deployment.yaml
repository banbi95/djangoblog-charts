apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: djangoblog
  name: {{ include "djangoblog-chart.fullname" . }}
spec:
  replicas: {{ .Values.djangoblog.replicas}}
  selector:
    matchLabels:
      io.kompose.service: djangoblog
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: "25%"
      maxUnavailable: 1
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: djangoblog
    spec:
      dnsPolicy: ClusterFirst 
      containers:
        - image: "{{ .Values.djangoblog.image.repository }}:{{ .Values.djangoblog.image.tag }}"
          imagePullPolicy: "{{ .Values.djangoblog.image.pullPolicy }}"
          name: djangoblog
          ports:
            - containerPort: 8000
              protocol: TCP
          volumeMounts:
            - mountPath: /code/djangoblog/logs
              name: djangoblog-volume
              subPath: logs
            - mountPath: /code/djangoblog/uploads
              name: djangoblog-volume
              subPath: uploads
            - mountPath: /code/djangoblog/collectedstatic
              name: djangoblog-volume
              subPath: static
          envFrom:
           - secretRef:
               name: djangoblog-secret
          startupProbe:
            tcpSocket:
               port: 8000
            initialDelaySeconds: 30
            timeoutSeconds: 5   # the check timeout
            periodSeconds: 10   # the check period
            failureThreshold: 5   # the maximum number of failures before the container is considered as failed
            successThreshold: 1      
          livenessProbe:
             tcpSocket:
               port: 8000
             initialDelaySeconds: 30
             failureThreshold: 10   # the maximum number of failures before the container is considered as failed
             successThreshold: 1
             periodSeconds: 10   # the check period
             timeoutSeconds: 5   # the check timeout
          readinessProbe:
             httpGet:
               path: /
               port: 8000
             initialDelaySeconds: 60
             failureThreshold: 5   # the maximum number of failures before its service connsidered unavailable
             successThreshold: 1
             periodSeconds: 10   # the check period
             timeoutSeconds: 5   # the check timeout
          resources:
             limits:
                cpu: 500m
                memory: 500Mi
             requests:
                cpu: 100m
                memory: 100Mi
      imagePullSecrets:
            - name: default   # replace it with your own imagePullSecrets
      restartPolicy: Always
      volumes:
        - name: djangoblog-volume
          persistentVolumeClaim:
            claimName: {{ .Values.djangoblog.persistence.claimName }}
  


        
